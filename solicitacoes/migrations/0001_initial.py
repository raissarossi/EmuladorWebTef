# Generated by Django 4.2.1 on 2023-06-19 14:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBosch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('bosch_user', models.CharField(max_length=6, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_categoria', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_error', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100)),
                ('error_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anexo', models.FileField(upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='LocalDebito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_local_debito', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_setor', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDebito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_tipo_debito', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_tipo_servico', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pedidos',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, primary_key=True, serialize=False, unique=True)),
                ('ramal', models.CharField(max_length=10)),
                ('data', models.DateField(auto_now_add=True)),
                ('local_debito_numero', models.IntegerField()),
                ('prazo_pretendido', models.DateField()),
                ('descricao', models.TextField(max_length=200)),
                ('n_desenho', models.CharField(max_length=10)),
                ('grupo', models.CharField(blank=True, max_length=10, null=True)),
                ('solicitacao_semelhante', models.BooleanField(default=False)),
                ('bloco_k', models.CharField(blank=True, max_length=10, null=True)),
                ('nome_do_projeto', models.CharField(blank=True, max_length=10, null=True)),
                ('blank_area', models.CharField(blank=True, max_length=10, null=True)),
                ('anexo_desenho', models.ManyToManyField(to='solicitacoes.files')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.categoria')),
                ('local_debito_tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.localdebito')),
                ('n_solicitacao_executada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.pedidos')),
                ('setor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.setor')),
                ('tipo_de_servico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.tiposervico')),
                ('tipo_debito', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='solicitacoes.tipodebito')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
